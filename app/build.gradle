
apply plugin: 'com.android.application'
//React Native图标
project.ext.vectoricons = [
        iconFontNames: [ 'MaterialIcons.ttf', 'EvilIcons.ttf' ] // Name of the font files you want to copy
]

apply from: "../node_modules/react-native-vector-icons/fonts.gradle"

//获取配置中的签名
Properties properties = new Properties()
// local.properties file in the root director
properties.load(project.rootProject.file('gradle.properties').newDataInputStream())
println("Gradle属性properties："+properties)
//打包时间
def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
}

android {
    //配置打包签名
    signingConfigs {
        release {
            storeFile file(properties.getProperty("keystore.path"))
            storePassword properties.getProperty("keystore.password")
            keyAlias = properties.getProperty("keystore.alias")
            keyPassword properties.getProperty("keystore.alias_password")
            println("获取签名配置")
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.darly.std"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        ndk {
            abiFilters "armeabi","armeabi-v7a","x86"
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            debuggable true  //true代表开启  false 关闭
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //配置打包文件路径以及名称
            applicationVariants.all { variant ->
                variant.outputs.all {
                    println("开始打包")
                    if (variant.name.equalsIgnoreCase('release')){
//                        variant.getPackageApplicationProvider().get().outputDirectory = new File("/Users/rkhd/Desktop/StudioWork/StudyDay/app/release")
                        outputFileName = "StudyDay_${releaseTime()}_release_${defaultConfig.versionName}.apk"
                    }
                }
            }
        }
    }

    dataBinding {
        enabled = true
    }

    project.ext.react = [
            entryFile: "index.js",
            enableHermes: true
    ]
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //业务模块
    implementation project(path: ':Chinese')

}
